#!/bin/bash
#
# Copyright Â© 2021, Samar Vispute "SamarV-121" <samarvispute121@gmail.com>
#
# SPDX-License-Identifier: Apache-2.0
# --
# export GITHUB_TOKEN=token
# github-release.sh repo tag branch "description" file(s)
# eg.
# export GITHUB_TOKEN=2345htrvdcse234rbfbgn345
# github-release.sh SamarV-121/releases 1.0.2 master "Test release" test.zip test.tar
#
if [ "$5" ]; then
	REPO="$1"
	TAG="$2"
	BRANCH="$3"
	DESC="$4"
	FILES="${*:5}"

	GITHUB_REPO="https://api.github.com/repos/$REPO"
	AUTH="Authorization: token $GITHUB_TOKEN"
	TAG_INFO=$(curl -H "$AUTH" "$GITHUB_REPO/releases/tags/$TAG")

	# Check if file exists before
	for FILE in $FILES; do
		if [ ! -f "$FILE" ]; then
			echo "$FILE doesn't exist"
			exit
		fi
	done

	# Use existing tag otherwise, create a new one
	TAG_ID=$(jq .id <<<"$TAG_INFO")
	[ "$TAG_ID" = null ] &&
		TAG_ID=$(curl -X POST "$GITHUB_REPO/releases" -H "$AUTH" -d "{\"tag_name\": \"$TAG\", \"target_commitish\": \"$BRANCH\", \"name\": \"$TAG\", \"body\": \"$DESC\"}" | jq '.id')

	for FILE in $FILES; do
		# Remove old asset with same filename if exists
		ASSET_ID="$(jq -r '.assets[] | select(.name == '\""$FILE"\"').id' <<<"$TAG_INFO" 2>/dev/null)"
		[ "$ASSET_ID" ] &&
			curl -X "DELETE" -H "$AUTH" "$GITHUB_REPO/releases/assets/$ASSET_ID"

		# Upload file
		GITHUB_ASSET="https://uploads.github.com/repos/$REPO/releases/$TAG_ID/assets?name=$(basename "$FILE")"
		echo "Uploading $FILE... "
		LOG=$(curl -T "$FILE" -H "$AUTH" -H "Content-Type: $(file -b --mime-type "$FILE")" "$GITHUB_ASSET")
		DLOAD_URL=$(jq -r '.browser_download_url' <<<"$LOG")
		if [ "$DLOAD_URL" = null ]; then
			echo -e "Failed to upload\n$(<"$LOG")"
		else
			echo -e "Succesfully uploaded\nDownload URL: $DLOAD_URL"
		fi
	done
else
	sed -n '/^$/q;/# --/,$ s/^#*//p' "$0"
fi
